"plot_L2components", "L2compo")))
#### plot system understanding ####
plot_SystemUnderstanding <- ggplot(nachbefragung, aes(x = interval, y=100 * System_sum)) +
geom_violin(fill = "#DAD7CB") +
stat_summary(fun = mean, geom="point",colour="black", size=1) +
stat_summary(fun.data = fun_mean, geom="text", vjust=-.55, size=3.3) +
labs(y="Percentage correct answers", x="",
title = "System understanding") +
theme_bw() +
theme(text=element_text(family = "sans", color="black", size=12),
panel.grid.minor.y = element_blank(),
legend.position = "none",
axis.text.x=element_text(color = "black", size=10, angle=0, vjust=.8, hjust=0.8))
plot_SystemUnderstanding
ggsave(filename = "data/results/figures/SystemUnderstanding.png", plot_SystemUnderstanding,
dpi = 300, units = "in", width = 4, height = 3, device='png')
SystemUnderstanding_singleQ_means <- nachbefragung %>%
select(interval, starts_with("System0"), starts_with("System1")) %>%
group_by(interval) %>%
FOT_skim() %>%
select(interval, skim_variable, numeric.mean) %>%
rename(question = skim_variable) %>%
rename(mean = numeric.mean)
plot_SystemUnderstanding_singleQ <- ggplot(SystemUnderstanding_singleQ_means, aes(x = question, y=mean*100)) +
geom_line(aes(group = interval)) +
geom_point() +
stat_summary(fun = mean, geom="point",colour="black", size=1) +
stat_summary(fun.data = fun_mean, geom="text", vjust=1.8, size=3.3) +
labs(y="Percentage correct answers", x="",
title = "System understanding - single questions") +
facet_grid(interval ~.) +
ylim(0, 100) +
theme_bw() +
theme(text=element_text(family = "sans", color="black", size=12),
panel.grid.minor.y = element_blank(),
legend.position = "none",
axis.text.x=element_text(color = "black", size=10, angle=30, vjust=.8, hjust=0.8))
plot_SystemUnderstanding_singleQ
ggsave(filename = "data/results/figures/SystemUnderstanding_singleQ.png", plot_SystemUnderstanding_singleQ,
dpi = 300, units = "in", width = 8, height = 5, device='png')
rm(list = setdiff(ls(), c("vorbefragung", "nachbefragung", "fun_mean", "fun_median", "mean_FOT", "FOT_skim",
"plot_TiA_all_scales", "TiA",
"plot_CTAM_all_scales", "CTAM",
"plot_NDRT_all_scales", "NDRT",
"plot_L2components", "L2compo",
"plot_SystemUnderstanding", "plot_SystemUnderstanding_singleQ")))
#### plot monitoring (subj. ueberwachungsguete) ####
labels_monitoring <- c("0 - inattentive", "1", "2", "3", "4", "5", "6 - always attentive")
plot_monitoring <- ggplot(nachbefragung, aes(x = SubjUeberwachguete.1.)) +
geom_bar(fill = "#DAD7CB", color = "black") +
facet_grid(~interval) +
xlim(-0.5,6.5) +
scale_x_discrete(limit = c("0", "1", "2", "3", "4", "5", "6"), labels = labels_monitoring) + # NA removed
labs(y="", x="",
title = "Subjective rating of monitoring performance") +
geom_text(stat='count', aes(label=..count..), position=position_dodge2(width=0.9, preserve=c("single")), vjust=-0.3) +
theme_bw() +
theme(text=element_text(family = "sans", color="black", size=12),
panel.grid.minor.y = element_blank(),
legend.position = "none",
axis.text.x=element_text(color = "black", size=10, angle=40, vjust=1, hjust=0.9))
plot_monitoring
ggsave(filename = "data/results/figures/SubjMonitoringPerformance.png", plot_monitoring,
dpi = 300, units = "in", width = 8, height = 5, device='png')
rm(list = setdiff(ls(), c("vorbefragung", "nachbefragung", "fun_mean", "fun_median", "mean_FOT", "FOT_skim",
"plot_TiA_all_scales", "TiA",
"plot_CTAM_all_scales", "CTAM",
"plot_NDRT_all_scales", "NDRT",
"plot_L2components", "L2compo",
"plot_monitoring")))
#### plot influence setting ####
labels_setting <- c("affected", "not affected")
plot_setting <- ggplot(nachbefragung, aes(x = SubjEinflussSetting)) +
geom_bar(fill = "#DAD7CB", color = "black", width = 0.8) +
facet_grid(~interval) +
xlim(-0.5,1.5) +
ylim(0, 27) +
scale_x_discrete(limit = c("0", "1"), labels = labels_setting) + # NA removed
labs(y="", x="",
title = "Subjective assessment of the influence of the experimental setting on behavior") +
geom_text(stat='count', aes(label=..count..), position=position_dodge2(width=0.9, preserve=c("single")), vjust=-0.3) +
theme_bw() +
theme(text=element_text(family = "sans", color="black", size=12),
panel.grid.minor.y = element_blank(),
legend.position = "none",
axis.text.x=element_text(color = "black", size=10, angle=40, vjust=1, hjust=0.9))
plot_setting
ggsave(filename = "data/results/figures/SubjInfluenceSetting.png", plot_setting,
dpi = 300, units = "in", width = 8, height = 5, device='png')
rm(list = setdiff(ls(), c("vorbefragung", "nachbefragung", "fun_mean", "fun_median", "mean_FOT", "FOT_skim",
"plot_TiA_all_scales", "TiA",
"plot_CTAM_all_scales", "CTAM",
"plot_NDRT_all_scales", "NDRT",
"plot_L2components", "L2compo",
"plot_monitoring",
"plot_setting")))
#### plot ranking ####
labels_ranking <- c("H-on", "H-off")
nachbefragung_Aoff <- nachbefragung %>% # if
filter(interval == "A_off")
plot_ranking <- ggplot(nachbefragung_Aoff, aes(x = Ranking)) +
geom_bar(fill = "#DAD7CB", color = "black") +
xlim(-0.5,1.5) +
scale_x_discrete(limit = c("1", "2"), labels = labels_ranking) + # NA removed
labs(y="", x="",
title = "A_off: Preferred L2 system") +
geom_text(stat='count', aes(label=..count..), position=position_dodge2(width=0.9, preserve=c("single")), vjust=-0.3) +
theme_bw() +
theme(text=element_text(family = "sans", color="black", size=12),
panel.grid.minor.y = element_blank(),
legend.position = "none",
axis.text.x=element_text(color = "black", size=10, angle=40, vjust=1, hjust=0.9))
plot_ranking
ggsave(filename = "data/results/figures/Ranking.png", plot_ranking,
dpi = 300, units = "in", width = 4, height = 5, device='png')
rm(list = setdiff(ls(), c("vorbefragung", "nachbefragung", "fun_mean", "fun_median", "mean_FOT", "FOT_skim",
"plot_TiA_all_scales", "TiA",
"plot_CTAM_all_scales", "CTAM",
"plot_NDRT_all_scales", "NDRT",
"plot_L2components", "L2compo",
"plot_monitoring",
"plot_setting",
"plot_ranking")))
################## sample characteristics ###########################################################
#### plot age ####
plot_age <- ggplot(vorbefragung, aes(x = group, y=Alter)) +
geom_violin(fill = "#DAD7CB") +
stat_summary(fun = mean, geom="point",colour="black", size=1) +
stat_summary(fun.data = fun_mean, geom="text", vjust=-.55, size=3.3) +
labs(y="years", x="",
title = "Age") +
theme_bw() +
ylim(18, 80) +
theme(text=element_text(family = "sans", color="black", size=12),
panel.grid.minor.y = element_blank(),
legend.position = "none",
axis.text.x=element_text(color = "black", size=10, angle=0, vjust=.8, hjust=0.8))
plot_age
ggsave(filename = "data/results/figures/Age.png", plot_age,
dpi = 300, units = "in", width = 4, height = 3, device='png')
rm(list = setdiff(ls(), c("vorbefragung", "nachbefragung", "fun_mean", "fun_median", "mean_FOT", "FOT_skim",
"plot_TiA_all_scales", "TiA",
"plot_CTAM_all_scales", "CTAM",
"plot_NDRT_all_scales", "NDRT",
"plot_L2components", "L2compo",
"plot_monitoring",
"plot_setting",
"plot_ranking",
"plot_age")))
#### plot driver's license ####
plot_license <- ggplot(vorbefragung, aes(x = group, y=Fuehrerschein)) +
geom_violin(fill = "#DAD7CB") +
stat_summary(fun = mean, geom="point",colour="black", size=1) +
stat_summary(fun.data = fun_mean, geom="text", vjust=-.55, size=3.3) +
labs(y="year", x="",
title = "Year - obtainment of driver's license") +
theme_bw() +
ylim(1960, 2020) +
theme(text=element_text(family = "sans", color="black", size=12),
panel.grid.minor.y = element_blank(),
legend.position = "none",
axis.text.x=element_text(color = "black", size=10, angle=0, vjust=.8, hjust=0.8))
plot_license
ggsave(filename = "data/results/figures/License.png", plot_license,
dpi = 300, units = "in", width = 4, height = 3, device='png')
rm(list = setdiff(ls(), c("vorbefragung", "nachbefragung", "fun_mean", "fun_median", "mean_FOT", "FOT_skim",
"plot_TiA_all_scales", "TiA",
"plot_CTAM_all_scales", "CTAM",
"plot_NDRT_all_scales", "NDRT",
"plot_L2components", "L2compo",
"plot_monitoring",
"plot_setting",
"plot_ranking",
"plot_age",
"plot_license")))
#### plot DSQ ####
DSQ_Speed <- vorbefragung %>%
select(group, VPNr, DSQ_Speed) %>%
rename(score = DSQ_Speed) %>%
add_column(scale = "DSQ_Speed", .after = "VPNr")
DSQ_Calmness <- vorbefragung %>%
select(group, VPNr, DSQ_Calmness) %>%
rename(score = DSQ_Calmness) %>%
add_column(scale = "DSQ_Calmness", .after = "VPNr")
DSQ_SocialResistance <- vorbefragung %>%
select(group, VPNr, DSQ_SocialResistance) %>%
rename(score = DSQ_SocialResistance) %>%
add_column(scale = "DSQ_SocialResistance", .after = "VPNr")
DSQ_Focus <- vorbefragung %>%
select(group, VPNr, DSQ_Focus) %>%
rename(score = DSQ_Focus) %>%
add_column(scale = "DSQ_Focus", .after = "VPNr")
DSQ_Planning <- vorbefragung %>%
select(group, VPNr, DSQ_Planning) %>%
rename(score = DSQ_Planning) %>%
add_column(scale = "DSQ_Planning", .after = "VPNr")
DSQ_Deviance <- vorbefragung %>%
select(group, VPNr, DSQ_Deviance) %>%
rename(score = DSQ_Deviance) %>%
add_column(scale = "DSQ_Deviance", .after = "VPNr")
DSQ <- bind_rows(DSQ_Speed, DSQ_Calmness, DSQ_SocialResistance, DSQ_Focus, DSQ_Planning, DSQ_Deviance) %>%
mutate(scale = factor(scale, levels = c("DSQ_Speed", "DSQ_Calmness", "DSQ_SocialResistance", "DSQ_Focus", "DSQ_Planning", "DSQ_Deviance"), ordered = TRUE))
labels_DSQ = c("Speed", "Calmness", "Social Resistance",
"Focus", "Planning", "Deviance")
plot_DSQ <- ggplot(DSQ, aes(x=scale, y=score, fill=scale)) +
geom_violin() +
ylim(2, 18) +
stat_summary(fun = mean, geom="point",colour="black", size=1) +
stat_summary(fun.data = fun_mean, geom="text", vjust=1.40, size=3.3) +
scale_x_discrete(labels= labels_DSQ) +
facet_wrap(~group) +
scale_fill_manual(values = c("#DAD7CB", "#DAD7CB", "#DAD7CB", "#DAD7CB", "#DAD7CB", "#DAD7CB")) +
labs(y="Score", x="",
title = "Driving Style Questionnaire - subscales") +
theme_bw() +
theme(text=element_text(family = "sans", color="black", size=12),
panel.grid.minor.y = element_blank(),
legend.position = "none",
axis.text.x=element_text(color = "black", size=10, angle=30, vjust=.9, hjust=0.8)) +
geom_segment(aes(x = 0.6, y = 18, xend = 1.4, yend = 18)) + # speed
geom_segment(aes(x = 0.6, y = 3, xend = 1.4, yend = 3)) +
geom_segment(aes(x = 1.6, y = 18, xend = 2.4, yend = 18)) + # calmness
geom_segment(aes(x = 1.6, y = 3, xend = 2.4, yend = 3)) +
geom_segment(aes(x = 2.6, y = 12, xend = 3.4, yend = 12)) + # social resistance
geom_segment(aes(x = 2.6, y = 2, xend = 3.4, yend = 2)) +
geom_segment(aes(x = 3.6, y = 18, xend = 4.4, yend = 18)) + # focus
geom_segment(aes(x = 3.6, y = 3, xend = 4.4, yend = 3)) +
geom_segment(aes(x = 4.6, y = 12, xend = 5.4, yend = 12)) + # planning
geom_segment(aes(x = 4.6, y = 2, xend = 5.4, yend = 2)) +
geom_segment(aes(x = 5.6, y = 12, xend = 6.4, yend = 12)) + # deviance
geom_segment(aes(x = 5.6, y = 2, xend = 6.4, yend = 2))
plot_DSQ
ggsave(filename = "data/results/figures/DSQ.png", plot_DSQ,
dpi = 300, units = "in", width = 8, height = 4, device='png')
rm(list = setdiff(ls(), c("vorbefragung", "nachbefragung", "fun_mean", "fun_median", "mean_FOT", "FOT_skim",
"plot_TiA_all_scales", "TiA",
"plot_CTAM_all_scales", "CTAM",
"plot_NDRT_all_scales", "NDRT",
"plot_L2components", "L2compo",
"plot_monitoring",
"plot_setting",
"plot_ranking",
"plot_age",
"plot_license",
"plot_DSQ", "DSQ")))
#### plot ATI-S ####
plot_ATIS <- ggplot(vorbefragung, aes(x = group, y=ATIS)) +
geom_violin(fill = "#DAD7CB") +
stat_summary(fun = mean, geom="point",colour="black", size=1) +
stat_summary(fun.data = fun_mean, geom="text", vjust=-.55, size=3.3) +
labs(y="score", x="",
title = "Affinity for Technology Interaction Scale") +
theme_bw() +
ylim(1, 6) +
theme(text=element_text(family = "sans", color="black", size=12),
panel.grid.minor.y = element_blank(),
legend.position = "none",
axis.text.x=element_text(color = "black", size=10, angle=0, vjust=.8, hjust=0.8))
plot_ATIS
ggsave(filename = "data/results/figures/ATI-S.png", plot_ATIS,
dpi = 300, units = "in", width = 4, height = 3, device='png')
rm(list = setdiff(ls(), c("vorbefragung", "nachbefragung", "fun_mean", "fun_median", "mean_FOT", "FOT_skim",
"plot_TiA_all_scales", "TiA",
"plot_CTAM_all_scales", "CTAM",
"plot_NDRT_all_scales", "NDRT",
"plot_L2components", "L2compo",
"plot_monitoring",
"plot_setting",
"plot_ranking",
"plot_age",
"plot_license",
"plot_DSQ", "DSQ",
"plot_ATIS")))
#### plot driving frequency ####
labels_frequency <- c("(seldom or) never", "< 1x/month", "> 1x/month",
"> 1x/week", "daily")
frequency_general <- vorbefragung %>%
select(group, VPNr, Fahrtfrequenz) %>%
rename(score = Fahrtfrequenz) %>%
add_column(scale = "general", .after = "VPNr")
frequency_highway <- vorbefragung %>%
select(group, VPNr, FrequenzAutobahn) %>%
rename(score = FrequenzAutobahn) %>%
add_column(scale = "highway", .after = "VPNr")
frequency <- bind_rows(frequency_general, frequency_highway) %>%
mutate(scale = factor(scale, levels = c("general", "highway"), ordered = TRUE))
plot_frequency <- ggplot(frequency, aes(x = score)) +
geom_bar(fill = "#DAD7CB", color = "black", width = 0.6) +
facet_grid(scale~group) +
ylim(0,25) +
scale_x_discrete(limit = c("0", "1", "2", "3", "4"), labels = labels_frequency) + # NA removed
labs(y="", x="",
title = "Frequency - general & on highway") +
geom_text(stat='count', aes(label=..count..), position=position_dodge2(width=0.9, preserve=c("single")), vjust=-0.3) +
theme_bw() +
theme(text=element_text(family = "sans", color="black", size=12),
panel.grid.minor.y = element_blank(),
legend.position = "none",
axis.text.x=element_text(color = "black", size=10, angle=30, vjust=1, hjust=0.9))
plot_frequency
ggsave(filename = "data/results/figures/Frequency.png", plot_frequency,
dpi = 300, units = "in", width = 6, height = 6, device='png')
rm(list = setdiff(ls(), c("vorbefragung", "nachbefragung", "fun_mean", "fun_median", "mean_FOT", "FOT_skim",
"plot_TiA_all_scales", "TiA",
"plot_CTAM_all_scales", "CTAM",
"plot_NDRT_all_scales", "NDRT",
"plot_L2components", "L2compo",
"plot_monitoring",
"plot_setting",
"plot_ranking",
"plot_age",
"plot_license",
"plot_DSQ", "DSQ",
"plot_ATIS",
"plot_frequency", "frequency")))
#### plot mileage ####
labels_mileage <- c("0", "1 km - 5.000 km", "5.001 km - 20.000 km", "20.001 km - 50.000 km",
"50.001 km - 100.000 km", "> 100.000 km")
mileage_general <- vorbefragung %>%
select(group, VPNr, Fahrtstrecke) %>%
rename(score = Fahrtstrecke) %>%
add_column(scale = "general", .after = "VPNr")
mileage_highway <- vorbefragung %>%
select(group, VPNr, StreckeAutobahn) %>%
rename(score = StreckeAutobahn) %>%
add_column(scale = "highway", .after = "VPNr")
mileage <- bind_rows(mileage_general, mileage_highway) %>%
mutate(scale = factor(scale, levels = c("general", "highway"), ordered = TRUE))
plot_mileage <- ggplot(mileage, aes(x = score)) +
geom_bar(fill = "#DAD7CB", color = "black", width = 0.6) +
facet_grid(scale~group) +
ylim(0,25) +
scale_x_discrete(limit = c("0", "1", "2", "3", "4", "5"), labels = labels_mileage) + # NA removed
labs(y="", x="",
title = "Mileage - general & on highway") +
geom_text(stat='count', aes(label=..count..), position=position_dodge2(width=0.9, preserve=c("single")), vjust=-0.3) +
theme_bw() +
theme(text=element_text(family = "sans", color="black", size=12),
panel.grid.minor.y = element_blank(),
legend.position = "none",
axis.text.x=element_text(color = "black", size=10, angle=30, vjust=1, hjust=0.9))
plot_mileage
ggsave(filename = "data/results/figures/Mileage.png", plot_mileage,
dpi = 300, units = "in", width = 6, height = 6, device='png')
rm(list = setdiff(ls(), c("vorbefragung", "nachbefragung", "fun_mean", "fun_median", "mean_FOT", "FOT_skim",
"plot_TiA_all_scales", "TiA",
"plot_CTAM_all_scales", "CTAM",
"plot_NDRT_all_scales", "NDRT",
"plot_L2components", "L2compo",
"plot_monitoring",
"plot_setting",
"plot_ranking",
"plot_age",
"plot_license",
"plot_DSQ", "DSQ",
"plot_ATIS",
"plot_frequency", "frequency",
"plot_mileage", "mileage")))
#### plot familiarity with ADAS ####
labels_ADAS <- c("unknown", "known, but never used", "seldomly used", "used regularly")
ADAS_CC <- vorbefragung %>%
select(group, VPNr, KenntnisAS.CC.) %>%
rename(score = KenntnisAS.CC.) %>%
add_column(scale = "CC", .after = "VPNr")
ADAS_ACC <- vorbefragung %>%
select(group, VPNr, KenntnisAS.ACC.) %>%
rename(score = KenntnisAS.ACC.) %>%
add_column(scale = "ACC", .after = "VPNr")
ADAS_LKA <- vorbefragung %>%
select(group, VPNr, KenntnisAS.Spurhalte.) %>%
rename(score = KenntnisAS.Spurhalte.) %>%
add_column(scale = "LKA", .after = "VPNr")
ADAS_TJA <- vorbefragung %>%
select(group, VPNr, KenntnisAS.Stauassistent.) %>%
rename(score = KenntnisAS.Stauassistent.) %>%
add_column(scale = "TJA", .after = "VPNr")
ADAS_PA <- vorbefragung %>%
select(group, VPNr, KenntnisAS.ParkAssist.) %>%
rename(score = KenntnisAS.ParkAssist.) %>%
add_column(scale = "PA", .after = "VPNr")
ADAS_L2 <- vorbefragung %>%
select(group, VPNr, KenntnisAS.Teilautomation.) %>%
rename(score = KenntnisAS.Teilautomation.) %>%
add_column(scale = "L2", .after = "VPNr")
ADAS <- bind_rows(ADAS_CC, ADAS_ACC, ADAS_LKA, ADAS_TJA, ADAS_PA, ADAS_L2) %>%
mutate(scale = factor(scale, levels = c("CC", "ACC", "LKA", "TJA", "PA", "L2"), ordered = TRUE))
plot_ADAS <- ggplot(ADAS, aes(x = score)) +
geom_bar(fill = "#DAD7CB", color = "black", width = 0.6) +
facet_grid(scale~group) +
ylim(0,25) +
scale_x_discrete(limit = c("0", "1", "2", "3"), labels = labels_ADAS) + # NA removed | limit = c("0", "1", "2", "3", "4", "5", "6"),
labs(y="", x="",
title = "Familiarity with driver assistance systems") +
geom_text(stat='count', aes(label=..count..), position=position_dodge2(width=0.9, preserve=c("single")), vjust=-0.3) +
theme_bw() +
theme(text=element_text(family = "sans", color="black", size=12),
panel.grid.minor.y = element_blank(),
legend.position = "none",
axis.text.x=element_text(color = "black", size=10, angle=20, vjust=1, hjust=0.9))
plot_ADAS
ggsave(filename = "data/results/figures/ADAS.png", plot_ADAS,
dpi = 300, units = "in", width = 5, height = 10, device='png')
rm(list = setdiff(ls(), c("vorbefragung", "nachbefragung", "fun_mean", "fun_median", "mean_FOT", "FOT_skim",
"plot_TiA_all_scales", "TiA",
"plot_CTAM_all_scales", "CTAM",
"plot_NDRT_all_scales", "NDRT",
"plot_L2components", "L2compo",
"plot_monitoring",
"plot_setting",
"plot_ranking",
"plot_age",
"plot_license",
"plot_DSQ", "DSQ",
"plot_ATIS",
"plot_frequency", "frequency",
"plot_mileage", "mileage",
"plot_ADAS", "ADAS")))
################## not applied ######################################################################
#### not applied: plot TiA_overall ####
# plot_TiA_overall <- ggplot(nachbefragung, aes(x=interval, y=TiA_overall, fill=interval)) +
#   geom_boxplot() +
#   theme_bw() +
#   ylim(1, 5) +
#   theme(panel.grid.minor.y = element_blank(), legend.position = "bottom") +
#   scale_fill_manual("interval", values = c("A_on_fc" = "#64A0C8", "A_on_fam" = "#98C6EA", "A_off" = "#999999", "B_off" = "#DAD7CB")) +
#   labs(y="Score", x="",
#        title = "TiA_overall") +
#   stat_summary(fun = mean, geom="point",colour="black", size=2) +
#   stat_summary(fun.data = fun_mean, geom="text", vjust=-.7)
# plot_TiA_overall
#### not applied: plot TiA_overall with summary table (works only if facet) ####
# plot_TiA_overall_summ <- plot_TiA_overall
# summ <- nachbefragung %>%
#   group_by(interval) %>%
#   summarize(min = min(TiA_overall), max = max(TiA_overall),
#             mean = mean(TiA_overall), q1= quantile(TiA_overall, probs = 0.25),
#             median = median(TiA_overall), q3= quantile(TiA_overall, probs = 0.75),
#             sd = sd(TiA_overall)) %>%
#   mutate_if(is.numeric, round, digits=2) %>%
#   mutate(lab = paste("min = ", min, "\nmax = ", max, "\nmean = ", mean,
#                      "\nmedian = ", median, "\nsd = ", sd),
#          position=c(1.5, 0.8, 0.25, -2)) %>% select(interval, lab, position)
#
# plot_TiA_overall_summ <- plot_TiA_overall_summ + geom_text(data = summ, aes(label = lab), x = Inf, y = Inf, hjust = 1, vjust = 1.2, size = 3)
# plot_TiA_overall_summ
#### not applied: plot TiA_overall with summary table in different facets ####
# plot_TiA_overall_summ_facet <- ggplot(nachbefragung, aes(x=interval, y=TiA_overall, fill=interval)) +
#   geom_violin() + # geom_boxplot()
#   theme_bw() +
#   ylim(1, 5) +
#   theme(panel.grid.minor.y = element_blank(), legend.position = "bottom") +
#   facet_wrap(~interval) +
#   scale_fill_manual("interval", values = c("A_on_fc" = "#64A0C8", "A_on_fam" = "#98C6EA", "A_off" = "#999999", "B_off" = "#DAD7CB")) +
#   labs(y="Score", x="",
#        title = "TiA_overall") +
#   stat_summary(fun = mean, geom="point",colour="black", size=2) +
#   stat_summary(fun.data = fun_mean, geom="text", vjust=-.7)
# plot_TiA_overall_summ_facet
#
# plot_TiA_overall_summ_facet <- plot_TiA_overall_summ_facet + geom_text(data = summ, aes(label = lab), x = Inf, y = Inf, hjust = 1, vjust = 1.2, size = 3)
# plot_TiA_overall_summ_facet
#### not applied: alternative plotting approach ####
# ggsummarystats(
#   nachbefragung, x = "interval", y = "CTAM_PS",
#   ggfunc = ggviolin, add = c("jitter", "median"),
#
#   color = "interval", palette = "npg"
# )
plot_mileage <- ggplot(mileage, aes(x = score)) +
geom_violin(fill = "#DAD7CB", color = "black", width = 0.6) +
facet_grid(scale~group) +
ylim(0,25) +
scale_x_discrete(limit = c("0", "1", "2", "3", "4", "5"), labels = labels_mileage) + # NA removed
labs(y="", x="",
title = "Mileage - general & on highway") +
geom_text(stat='count', aes(label=..count..), position=position_dodge2(width=0.9, preserve=c("single")), vjust=-0.3) +
theme_bw() +
theme(text=element_text(family = "sans", color="black", size=12),
panel.grid.minor.y = element_blank(),
legend.position = "none",
axis.text.x=element_text(color = "black", size=10, angle=30, vjust=1, hjust=0.9))
#### plot mileage ####
labels_mileage <- c("0", "1 km - 5.000 km", "5.001 km - 20.000 km", "20.001 km - 50.000 km",
"50.001 km - 100.000 km", "> 100.000 km")
plot_mileage <- ggplot(mileage, aes(x = score)) +
geom_violin(fill = "#DAD7CB", color = "black", width = 0.6) +
facet_grid(scale~group) +
ylim(0,25) +
scale_x_discrete(limit = c("0", "1", "2", "3", "4", "5"), labels = labels_mileage) + # NA removed
labs(y="", x="",
title = "Mileage - general & on highway") +
geom_text(stat='count', aes(label=..count..), position=position_dodge2(width=0.9, preserve=c("single")), vjust=-0.3) +
theme_bw() +
theme(text=element_text(family = "sans", color="black", size=12),
panel.grid.minor.y = element_blank(),
legend.position = "none",
axis.text.x=element_text(color = "black", size=10, angle=30, vjust=1, hjust=0.9))
plot_mileage
plot_mileage <- ggplot(mileage, aes(x = score)) +
geom_bar(fill = "#DAD7CB", color = "black", width = 0.6) +
facet_grid(scale~group) +
ylim(0,25) +
scale_x_discrete(limit = c("0", "1", "2", "3", "4", "5"), labels = labels_mileage) + # NA removed
labs(y="", x="",
title = "Mileage - general & on highway") +
geom_text(stat='count', aes(label=..count..), position=position_dodge2(width=0.9, preserve=c("single")), vjust=-0.3) +
theme_bw() +
theme(text=element_text(family = "sans", color="black", size=12),
panel.grid.minor.y = element_blank(),
legend.position = "none",
axis.text.x=element_text(color = "black", size=10, angle=30, vjust=1, hjust=0.9))
plot_mileage
